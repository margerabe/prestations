exit
@matched_pros
exit
@matched_pros
exit
@matched_pros.pluck(:name)
@matched_pros.count
exit
@matched_pros.count
@matched_pros
exit
pro.opening_hours.first.ends_at > to_time(booking_end_time)
pro.opening_hours.first.starts_at < to_time(booking_start_time)
pro.opening_hours.first.starts_at
pro.opening_hours
pro = Pro.find_by(name: 'Pro4')
pro = Pro.find_by(name: 'Pro4)
Pro.joins(:opening_hours).where('opening_hours.starts_at BETWEEN ? and ?', to_time(booking_start_time), to_time(booking_end_time))
to_time(booking_end_time)
to_time(booking_start_time)
c
exit
Pro.find_by(name: 'Pro5').opening_hours
Pro.find_by(name: 'Pro5')
Pro.find(5)
to_time(booking_end_time)
to_time(booking_start_time)
exit
OpeningHour.all[4].starts_at < to_time(booking_end_time)
OpeningHour.all[4].starts_at
OpeningHour.first.starts_at
OpeningHour.first.starts_at < to_time(booking_end_time)
OpeningHour.last.starts_at < to_time(booking_end_time)
OpeningHour.last.starts_at
to_time(booking_end_time)
to_time(booking_end_time).class
OpeningHour.last.starts_at.class
OpeningHour.last.starts_at
to_time(booking_end_time)
to_time(booking_start_time)
exit
OpeningHour.last.ends_at.strftime("%H:%M") > start_time.strftime("%H:%M")
OpeningHour.last.ends_at.to_datetime > start_time
OpeningHour.last.ends_at.to_datetime
OpeningHour.last.ends_at.strftime("%H:%M").to_datetime
OpeningHour.last.ends_at.strftime("%H:%M")
OpeningHour.last.ends_at > start_time
OpeningHour.last.ends_at > start_time.to_time
OpeningHour.last.ends_at > start_time
start_time
OpeningHour.last.ends_at > start_time
OpeningHour.last.ends_at
start_time.to_time
OpeningHour.last.starts_at.to_datetime
OpeningHour.last.start_at.to_datetime
OpeningHour.last
start_time
start_time.strftime("%H:%M")
Time.parse(start_time)
Time.parse(start_time.to_s)
start_time
OpeningHour.first
start_time
Time.parse(start_time.to_s)
c
exit
pros.reject{ _1 == pro2 || _1 == pro5 }.pluck(:name)
pros.reject{ _1 == pro2 || _1 == pro5 }.count
pros.reject{ _1 == pro2 || _1 == pro5 }
exit
pro.appointments
pro = Pro.find_by(name: 'Pro1')
pro.appointments
pro = Pro.find_by(name: 'Pro6')
Pro.find_by(name: 'Pro6')
exit
Pro.find_by(name: 'Pro6')
Pro.includes(:appointments).where('appointments.starts_at NOT BETWEEN ? AND  ?', booking_start_time(@booking), booking_end_time(@booking))
Pro.includes(:appointments)
Pro.count
exit
Pro.count
Pro.includes(:appointments)
end_time = booking_end_time(@booking)
start_time = booking_start_time(@booking)
start_time = _
booking_start_time(@booking)
Pro.available_at(start_time: booking_start_time(@booking), end_time: booking_end_time(@booking))
exit
Pro.available_at(time: booking_start_time(@booking))
exit
Pro.available_at(day: @booking_day).count
Pro.available_at(day: @booking_day)
@booking_day
exit
match_distance.order(:name).to_a
exit
match_distance.order(:name).to_a
match_distance.order(:name).pluck(:name)
match_distance.order(:name)
exit
match_distance
match_distance.order(:name)
match_distance.order(:name).pluck(:name)
match_distance.order(:name)
